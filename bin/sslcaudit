#!/usr/bin/env python

# ----------------------------------------------------------------------
# SSLCAUDIT - a tool for automating security audit of SSL clients
# Released under terms of GPLv3, see COPYING.TXT
# Copyright (C) 2012 Alexandre Bezroutchko abb@gremwell.com
# ----------------------------------------------------------------------
# Code handling keyboard interrupts contributed by Raf Somers (raf.somers@telenet.be)
# ----------------------------------------------------------------------


import os, sys

# if the script is launched from sources, make sure it uses modules located in the
# same place
base_dir = os.path.join(os.path.dirname(__file__), '..')
src_dir = os.path.join(base_dir, 'sslcaudit')
if os.path.exists(src_dir): sys.path.insert(0, base_dir)

import logging
from sslcaudit.core.ConfigError import ConfigError


def check_dependencies():
    # make sure M2Crypto is installed
    try:
        import M2Crypto

        return True
    except ImportError as ex:
        print 'Failed to load M2Crypto: %s' % ex
        print
        print 'Sslcaudit requires M2Crypto library. Please install your OS package or see'
        print 'website http://chandlerproject.org/bin/view/Projects/MeTooCrypto.'
        return False


def main(argv):
    if not check_dependencies():
        return 1

    try:
        from sslcaudit.core import SSLCAuditUI

        options = SSLCAuditUI.parse_options(argv[1:])
        if options.gui:
            from sslcaudit.core.SSLCAuditGUI import SSLCAuditGUI

            ui = SSLCAuditGUI(options)
        else:
            from sslcaudit.core.SSLCAuditCLI import SSLCAuditCLI

            ui = SSLCAuditCLI(options)
        return ui.run()
    except KeyboardInterrupt as ex:
        print 'Got KeyboardInterrupt exception before controller loop started, exiting'
        return 1
    except ConfigError as ex:
        print 'Configuration error: %s' % ex
        return 1
    except RuntimeError as ex:
        print 'Runtime error: %s' % ex
        return 1

if __name__ == "__main__":
    logging.basicConfig()
    sys.exit(main(sys.argv))

